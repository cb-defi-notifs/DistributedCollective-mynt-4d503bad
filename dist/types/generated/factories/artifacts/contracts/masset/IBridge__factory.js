"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IBridge__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "_tokenAddress",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "_to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint8",
                name: "_decimals",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "_granularity",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "_formattedAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint8",
                name: "_calculatedDecimals",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "_calculatedGranularity",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "_userData",
                type: "bytes",
            },
        ],
        name: "AcceptedCrossTransfer",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "_tokenAddress",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "_to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "string",
                name: "_symbol",
                type: "string",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "_userData",
                type: "bytes",
            },
            {
                indexed: false,
                internalType: "uint8",
                name: "_decimals",
                type: "uint8",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "_granularity",
                type: "uint256",
            },
        ],
        name: "Cross",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes",
                name: "_errorData",
                type: "bytes",
            },
        ],
        name: "ErrorTokenReceiver",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
        ],
        name: "FeePercentageChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "_newSideTokenAddress",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "_originalTokenAddress",
                type: "address",
            },
            {
                indexed: false,
                internalType: "string",
                name: "_newSymbol",
                type: "string",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "_granularity",
                type: "uint256",
            },
        ],
        name: "NewSideToken",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "originalTokenAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "symbol",
                type: "string",
            },
            {
                internalType: "bytes32",
                name: "blockHash",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "transactionHash",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "logIndex",
                type: "uint32",
            },
            {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "granularity",
                type: "uint256",
            },
        ],
        name: "acceptTransfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "originalTokenAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "symbol",
                type: "string",
            },
            {
                internalType: "bytes32",
                name: "blockHash",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "transactionHash",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "logIndex",
                type: "uint32",
            },
            {
                internalType: "uint8",
                name: "decimals",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "granularity",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "userData",
                type: "bytes",
            },
        ],
        name: "acceptTransferAt",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "calcMaxWithdraw",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getFeePercentage",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenToUse",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "receiveTokens",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenToUse",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
            },
        ],
        name: "receiveTokensAt",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "operator",
                type: "address",
            },
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "userData",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "operatorData",
                type: "bytes",
            },
        ],
        name: "tokensReceived",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "version",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
class IBridge__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IBridge__factory = IBridge__factory;
IBridge__factory.abi = _abi;
//# sourceMappingURL=IBridge__factory.js.map