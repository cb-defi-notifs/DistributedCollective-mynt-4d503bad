import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type { MockDependency, MockDependencyInterface } from "../../../../../../artifacts/contracts/mocks/upgradability/MockProxyImplementation.sol/MockDependency";
type MockDependencyConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockDependency__factory extends ContractFactory {
    constructor(...args: MockDependencyConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MockDependency>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MockDependency;
    connect(signer: Signer): MockDependency__factory;
    static readonly bytecode = "0x60c0604052601860809081527f6d6f636b20646570656e64656e637920636f6e7472616374000000000000000060a05260009061003c90826100ee565b5034801561004957600080fd5b506101ad565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061007957607f821691505b60208210810361009957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156100e957600081815260208120601f850160051c810160208610156100c65750805b601f850160051c820191505b818110156100e5578281556001016100d2565b5050505b505050565b81516001600160401b038111156101075761010761004f565b61011b816101158454610065565b8461009f565b602080601f83116001811461015057600084156101385750858301515b600019600386901b1c1916600185901b1785556100e5565b600085815260208120601f198616915b8281101561017f57888601518255948401946001909101908401610160565b508582101561019d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61019a806101bc6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806355f150f114610030575b600080fd5b61003861004e565b60405161004591906100dc565b60405180910390f35b6000805461005b9061012a565b80601f01602080910402602001604051908101604052809291908181526020018280546100879061012a565b80156100d45780601f106100a9576101008083540402835291602001916100d4565b820191906000526020600020905b8154815290600101906020018083116100b757829003601f168201915b505050505081565b600060208083528351808285015260005b81811015610109578581018301518582016040015282016100ed565b506000604082860101526040601f19601f8301168501019250505092915050565b600181811c9082168061013e57607f821691505b60208210810361015e57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220ef97d611ad0da107b720e08b42b3c909ff5c080df4aa33589ff80ac899bc772b64736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "desc";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): MockDependencyInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockDependency;
}
export {};
