"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockProxyImplementationMetaAssetToken__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "previousAdmin",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "newAdmin",
                type: "address",
            },
        ],
        name: "AdminChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "beacon",
                type: "address",
            },
        ],
        name: "BeaconUpgraded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "implementation",
                type: "address",
            },
        ],
        name: "Upgraded",
        type: "event",
    },
    {
        inputs: [],
        name: "getDep",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getProxyImplementation",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getVersion",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_depAddress",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "isInitialized",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610239806100206000396000f3fe60806040526004361061004e5760003560e01c80630d8e6e2c1461005a578063392e53cd1461009357806390e4b720146100b6578063c4d66de8146100e3578063faf26b481461012f57600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5060408051808201825260018152603160f81b6020820152905161008a9190610185565b60405180910390f35b34801561009f57600080fd5b5060005460ff16604051901515815260200161008a565b3480156100c257600080fd5b506100cb61014d565b6040516001600160a01b03909116815260200161008a565b3480156100ef57600080fd5b5061012d6100fe3660046101d3565b603380546001600160a01b0319166001600160a01b03929092169190911790556000805460ff19166001179055565b005b34801561013b57600080fd5b506033546001600160a01b03166100cb565b60006101807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b600060208083528351808285015260005b818110156101b257858101830151858201604001528201610196565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156101e557600080fd5b81356001600160a01b03811681146101fc57600080fd5b939250505056fea264697066735822122087bc58af87902acb4aaf8bcc5ac1402780d593df8f22a88fc220d88dacb32b7064736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class MockProxyImplementationMetaAssetToken__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockProxyImplementationMetaAssetToken__factory = MockProxyImplementationMetaAssetToken__factory;
MockProxyImplementationMetaAssetToken__factory.bytecode = _bytecode;
MockProxyImplementationMetaAssetToken__factory.abi = _abi;
//# sourceMappingURL=MockProxyImplementationMetaAssetToken__factory.js.map