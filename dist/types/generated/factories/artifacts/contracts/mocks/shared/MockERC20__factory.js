"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockERC20__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "string",
                name: "_name",
                type: "string",
            },
            {
                internalType: "string",
                name: "_symbol",
                type: "string",
            },
            {
                internalType: "uint8",
                name: "_decimals",
                type: "uint8",
            },
            {
                internalType: "address",
                name: "_initialRecipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_initialMint",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "subtractedValue",
                type: "uint256",
            },
        ],
        name: "decreaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "giveMe",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "addedValue",
                type: "uint256",
            },
        ],
        name: "increaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b5060405162000f7f38038062000f7f83398101604081905262000034916200021a565b8484600362000044838262000358565b50600462000053828262000358565b5050506200007f828460ff16600a6200006d919062000539565b6200007990846200054e565b6200008a565b50505050506200057e565b6001600160a01b038216620000e55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000f9919062000568565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200017d57600080fd5b81516001600160401b03808211156200019a576200019a62000155565b604051601f8301601f19908116603f01168101908282118183101715620001c557620001c562000155565b81604052838152602092508683858801011115620001e257600080fd5b600091505b83821015620002065785820183015181830184015290820190620001e7565b600093810190920192909252949350505050565b600080600080600060a086880312156200023357600080fd5b85516001600160401b03808211156200024b57600080fd5b6200025989838a016200016b565b965060208801519150808211156200027057600080fd5b506200027f888289016200016b565b945050604086015160ff811681146200029757600080fd5b60608701519093506001600160a01b0381168114620002b557600080fd5b80925050608086015190509295509295909350565b600181811c90821680620002df57607f821691505b6020821081036200030057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015057600081815260208120601f850160051c810160208610156200032f5750805b601f850160051c820191505b8181101562000350578281556001016200033b565b505050505050565b81516001600160401b0381111562000374576200037462000155565b6200038c81620003858454620002ca565b8462000306565b602080601f831160018114620003c45760008415620003ab5750858301515b600019600386901b1c1916600185901b17855562000350565b600085815260208120601f198616915b82811015620003f557888601518255948401946001909101908401620003d4565b5085821015620004145787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200047b5781600019048211156200045f576200045f62000424565b808516156200046d57918102915b93841c93908002906200043f565b509250929050565b600082620004945750600162000533565b81620004a35750600062000533565b8160018114620004bc5760028114620004c757620004e7565b600191505062000533565b60ff841115620004db57620004db62000424565b50506001821b62000533565b5060208310610133831016604e8410600b84101617156200050c575081810a62000533565b6200051883836200043a565b80600019048211156200052f576200052f62000424565b0290505b92915050565b600062000547838362000483565b9392505050565b808202811582820484141762000533576200053362000424565b8082018082111562000533576200053362000424565b6109f1806200058e6000396000f3fe6080604052600436106100ab5760003560e01c806344dee17f1161006457806344dee17f1461018d57806370a08231146101af57806395d89b41146101e5578063a457c2d7146101fa578063a9059cbb1461021a578063dd62ed3e1461023a57600080fd5b806306fdde03146100b7578063095ea7b3146100e257806318160ddd1461011257806323b872dd14610131578063313ce56714610151578063395093511461016d57600080fd5b366100b257005b600080fd5b3480156100c357600080fd5b506100cc61025a565b6040516100d99190610822565b60405180910390f35b3480156100ee57600080fd5b506101026100fd36600461088c565b6102ec565b60405190151581526020016100d9565b34801561011e57600080fd5b506002545b6040519081526020016100d9565b34801561013d57600080fd5b5061010261014c3660046108b6565b610306565b34801561015d57600080fd5b50604051601281526020016100d9565b34801561017957600080fd5b5061010261018836600461088c565b61032a565b34801561019957600080fd5b506101ad6101a83660046108f2565b61034c565b005b3480156101bb57600080fd5b506101236101ca36600461090b565b6001600160a01b031660009081526020819052604090205490565b3480156101f157600080fd5b506100cc610359565b34801561020657600080fd5b5061010261021536600461088c565b610368565b34801561022657600080fd5b5061010261023536600461088c565b6103e8565b34801561024657600080fd5b5061012361025536600461092d565b6103f6565b60606003805461026990610960565b80601f016020809104026020016040519081016040528092919081815260200182805461029590610960565b80156102e25780601f106102b7576101008083540402835291602001916102e2565b820191906000526020600020905b8154815290600101906020018083116102c557829003601f168201915b5050505050905090565b6000336102fa818585610421565b60019150505b92915050565b600033610314858285610545565b61031f8585856105bf565b506001949350505050565b6000336102fa81858561033d83836103f6565b610347919061099a565b610421565b6103563382610763565b50565b60606004805461026990610960565b6000338161037682866103f6565b9050838110156103db5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61031f8286868403610421565b6000336102fa8185856105bf565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104835760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d2565b6001600160a01b0382166104e45760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061055184846103f6565b905060001981146105b957818110156105ac5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d2565b6105b98484848403610421565b50505050565b6001600160a01b0383166106235760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d2565b6001600160a01b0382166106855760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d2565b6001600160a01b038316600090815260208190526040902054818110156106fd5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d2565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36105b9565b6001600160a01b0382166107b95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d2565b80600260008282546107cb919061099a565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561084f57858101830151858201604001528201610833565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461088757600080fd5b919050565b6000806040838503121561089f57600080fd5b6108a883610870565b946020939093013593505050565b6000806000606084860312156108cb57600080fd5b6108d484610870565b92506108e260208501610870565b9150604084013590509250925092565b60006020828403121561090457600080fd5b5035919050565b60006020828403121561091d57600080fd5b61092682610870565b9392505050565b6000806040838503121561094057600080fd5b61094983610870565b915061095760208401610870565b90509250929050565b600181811c9082168061097457607f821691505b60208210810361099457634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561030057634e487b7160e01b600052601160045260246000fdfea264697066735822122000ea8d00c929b5a3d51f14b2ff3160c4955bd5a396e1348095260c97746eace164736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class MockERC20__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_name, _symbol, _decimals, _initialRecipient, _initialMint, overrides) {
        return super.deploy(_name, _symbol, _decimals, _initialRecipient, _initialMint, overrides || {});
    }
    getDeployTransaction(_name, _symbol, _decimals, _initialRecipient, _initialMint, overrides) {
        return super.getDeployTransaction(_name, _symbol, _decimals, _initialRecipient, _initialMint, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockERC20__factory = MockERC20__factory;
MockERC20__factory.bytecode = _bytecode;
MockERC20__factory.abi = _abi;
//# sourceMappingURL=MockERC20__factory.js.map